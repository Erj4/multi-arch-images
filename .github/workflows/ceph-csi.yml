name: ceph-csi

on:
  push:
    paths:
      - '.github/workflows/ceph-csi.yml'
      - 'build/ceph-csi/**'
      - '!build/ceph-csi/*.md'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: enabled
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          BASE_DIR=build/ceph-csi
          VERSION=$(cat ${BASE_DIR}/.version)
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=base_dir::${BASE_DIR}

      # We need Docker, but not the Docker buildx bits?
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:master

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Repushing is necessary because a Docker manifest references images
      # and those images have to exist in the registry beforehand.
      - name: Pull, retag, and repush amd64 image
        run: |
          docker pull quay.io/cephcsi/cephcsi:v${{ steps.prep.outputs.version }}
          docker tag quay.io/cephcsi/cephcsi:v${{ steps.prep.outputs.version }} raspbernetes/ceph-csi:v${{ steps.prep.outputs.version }}-amd64
          docker push raspbernetes/ceph-csi:v${{ steps.prep.outputs.version }}-amd64

      - name: Pull, retag, and repush arm64 image
        run: |
          docker pull quay.io/cephcsi/cephcsi:v${{ steps.prep.outputs.version }}-arm64
          docker tag quay.io/cephcsi/cephcsi:v${{ steps.prep.outputs.version }}-arm64 raspbernetes/ceph-csi:v${{ steps.prep.outputs.version }}-arm64
          docker push raspbernetes/ceph-csi:v${{ steps.prep.outputs.version }}-arm64

      - name: Build Multiarch Manifest
        if: github.ref == 'refs/heads/master'
        run: |
          docker manifest create raspbernetes/ceph-csi:v${{ steps.prep.outputs.version }} raspbernetes/ceph-csi:v${{ steps.prep.outputs.version }}-amd64 raspbernetes/ceph-csi:v${{ steps.prep.outputs.version }}-arm64
          docker manifest annotate --arch arm64 raspbernetes/ceph-csi:v${{ steps.prep.outputs.version }} raspbernetes/ceph-csi:v${{ steps.prep.outputs.version }}-arm64
          docker manifest push raspbernetes/ceph-csi:v${{ steps.prep.outputs.version }}
